package main

// | # | From (Dec)                 | From (Hex)         | To (Dec)                   | To (Hex)           |
// |---|---------------------------:|--------------------|---------------------------:|--------------------|
// | 1 |                          0 | 0x0000000000000000 |                        127 | 0x000000000000007f |
// | 2 |                        128 | 0x0000000000000080 |                     16,383 | 0x0000000000003fff |
// | 3 |                     16,384 | 0x0000000000004000 |                  2,097,151 | 0x00000000001fffff |
// | 4 |                  2,097,152 | 0x0000000000200000 |                268,435,455 | 0x000000000fffffff |
// | 5 |                268,435,456 | 0x0000000010000000 |             34,359,738,367 | 0x00000007ffffffff |
// | 6 |             34,359,738,368 | 0x0000000800000000 |          4,398,046,511,103 | 0x000003ffffffffff |
// | 7 |          4,398,046,511,104 | 0x0000040000000000 |        562,949,953,421,311 | 0x0001ffffffffffff |
// | 8 |        562,949,953,421,312 | 0x0002000000000000 |     72,057,594,037,927,935 | 0x00ffffffffffffff |
// | 9 |     72,057,594,037,927,936 | 0x0100000000000000 |  9,223,372,036,854,775,807 | 0x7fffffffffffffff |
// | 10 | 9,223,372,036,854,775,808 | 0x8000000000000000 | 18,446,744,073,709,551,615 | 0xffffffffffffffff |

func bytesNeededUsingUvarint(x uint64) uint64 {
	if x < 0x80 {
		return 1
	}
	if x < 0x4000 {
		return 2
	}
	if x < 0x200000 {
		return 3
	}
	if x < 0x10000000 {
		return 4
	}
	if x < 0x800000000 {
		return 5
	}
	if x < 0x40000000000 {
		return 6
	}
	if x < 0x2000000000000 {
		return 7
	}
	if x < 0x100000000000000 {
		return 8
	}
	if x < 0x8000000000000000 {
		return 9
	}
	return 10
}

func BytesNeededUsingUvarint(s []uint64) uint64 {
	sum := uint64(0)
	for _, x := range s {
		sum += bytesNeededUsingUvarint(x)
	}
	return sum
}
